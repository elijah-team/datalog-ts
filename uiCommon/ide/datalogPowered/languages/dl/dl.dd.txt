dl
.table baz
foo{bar: A, baz: B} :-
  ???{} &
  bar{doop: ???} &
  baz{???: T}.
baz{time: T} :-
  time{time: T}.
ide.Suggestion{}
----
application/datalog
ide.Suggestion{id: 13, name: "A", span: span{from: 56, to: 59}, type: T}
ide.Suggestion{id: 13, name: "B", span: span{from: 56, to: 59}, type: T}
ide.Suggestion{id: global{}, name: "foo", span: span{from: 36, to: 39}, type: T}
ide.Suggestion{id: global{}, name: "baz", span: span{from: 36, to: 39}, type: T}
ide.Suggestion{id: global{}, name: "baz", span: span{from: 36, to: 39}, type: T}
ide.Suggestion{id: "baz", name: "time", span: span{from: 69, to: 72}, type: T}

dl
scope.Defn{scopeID: I, name: N, type: T, span: S} :-
  scope.builtin{id: I, name: N, type: T, location: S} |
  scope.l|||et{id: I, name: N, type: T, location: S} |
  scope.lambda{id: I, name: N, type: T, location: S}.
scope.builtin{id: I, name: N, type: T, location: "builtin"} :-
  ast.RootExpr{id: I} &
  lang.Builtin{name: N, type: T}.
scope.let{id: I, name: N, type: T, location: S} :-
  ast.letBodyExpr{letID: L, bodyID: I} &
  ast.letBindingExpr{letID: L, bindingID: B} &
  ast.letVar{letID: L, name: N, span: S} &
  tc.Type{id: B, type: T}.
scope.lambda{id: I, name: N, type: T, location: L} :-
  ast.lambda{body: I, id: LID} &
  ast.lambdaParam{lambdaID: LID, name: N, ty: T, location: L}.
scope.Var{scopeID: I, name: N, span: S} :-
  ast.expr{id: I} &
  ast.varExpr{parentID: I, text: N, span: S} |
  ast.expr{id: I} &
  ast.funcCall{id: FuncCallID, parentID: I} &
  ast.varExpr{parentID: FuncCallID, text: N, span: S}.
scope.Scope{id: I, label: I} :-
  ast.expr{id: I}.
scope.Placeholder{scopeID: I, span: S} :-
  ast.expr{id: I} &
  ast.placeholder{parentID: I, span: S}.
scope.Parent{childID: I, parentID: P} :-
  ast.letExpr{id: L, parentID: P} &
  ast.letBindingExpr{letID: L, bindingID: I} |
  ast.letExpr{id: L, parentID: P} &
  ast.letBodyExpr{letID: L, bodyID: I} |
  ast.funcCall{id: C, parentID: P} &
  ast.funcCallArg{callID: C, argID: I} |
  ast.funcCall{id: C, parentID: P} &
  ast.funcCallFunc{callID: C, funcID: I}.
  # ast.lambda{body: I, id: P}.
ast.letBindingExpr{letID: L, bindingID: D} :-
  ast.letExpr{id: L} &
  ast.inKW{id: IN, parentID: L} &
  astInternal.next{prev: WS, next: IN} &
  astInternal.next{prev: D, next: WS}.
ast.letBodyExpr{letID: L, bodyID: I} :-
  ast.letExpr{id: L} &
  ast.inKW{id: IN, parentID: L} &
  astInternal.next{prev: IN, next: WS} &
  astInternal.next{prev: WS, next: I}.
ast.letVar{letID: L, name: N, span: S} :-
  ast.letExpr{id: L} &
  ast.ident{parentID: L, text: N, span: S}.
ast.funcCallArg{callID: C, argID: I} :-
  ast.funcCall{id: C} &
  ast.expr{parentID: C, id: I}.
ast.funcCallFunc{callID: C, funcID: F} :-
  ast.funcCall{id: C} &
  ast.varExpr{id: F, parentID: C}.
tc.Type{id: I, type: T} :-
  tc.typeS{id: I, type: T} |
  tc.typeI{id: I, type: T} |
  tc.typeLambda{id: I, type: T} |
  tc.typeFC{id: I, type: T} |
  tc.typeLet{id: I, type: T} |
  tc.typeVar{id: I, type: T} |
  tc.typePlaceholder{id: I, type: T}.
tc.typeS{id: I, type: "string"} :-
  ast.expr{id: I} &
  ast.stringLit{parentID: I}.
tc.typeI{id: I, type: "int"} :-
  ast.expr{id: I} &
  ast.intLit{parentID: I}.
tc.typeFC{id: I, type: T} :-
  ast.expr{id: I} &
  ast.funcCall{parentID: I, id: FC} &
  ast.funcCallArg{callID: FC, argID: AID} &
  ast.funcCallFunc{callID: FC, funcID: FID} &
  ast.varExpr{id: FID, text: N} &
  scope.Item{scopeID: FID, name: N, type: tapp{from: F, to: T}} &
  tc.Type{id: AID, type: F}.
tc.typeLet{id: I, type: T} :-
  ast.expr{id: I} &
  ast.letExpr{id: L, parentID: I} &
  ast.letBodyExpr{letID: L, bodyID: BID} &
  tc.Type{id: BID, type: T}.
tc.typeVar{id: I, type: T} :-
  ast.expr{id: I} &
  ast.varExpr{id: V, parentID: I, text: N} &
  scope.Item{scopeID: I, name: N, type: T}.
tc.typeLambda{id: I, type: tapp{from: F, to: R}} :-
  ast.expr{id: I} &
  ast.lambda{id: L, parentID: I, retType: R, body: B} &
  ast.lambdaParam{lambdaID: L, ty: F} &
  tc.Type{id: B, type: R}.
tc.typePlaceholder{id: I, type: "unknown"} :-
  ast.expr{id: I} &
  ast.Placeholder{id: P, parentID: I}.
lang.Builtin{name: "plus2", type: tapp{from: "int", to: "int"}}.
ast.RootExpr{id: 1}.
hl.mapping{rule: "intLit", type: "int"}.
hl.mapping{rule: "stringLit", type: "string"}.
hl.mapping{rule: "bool", type: "bool"}.
hl.mapping{rule: "ident", type: "ident"}.
hl.mapping{rule: "letKW", type: "keyword"}.
hl.mapping{rule: "inKW", type: "keyword"}.
scope.Usage{}
----
application/datalog
scope.Usage{defnSpan: span{from: 215, to: 228}, definitionScopeID: global{}, kind: "relation", name: "scope.builtin", usageSpan: span{from: 55, to: 68}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 336, to: 345}, definitionScopeID: global{}, kind: "relation", name: "scope.let", usageSpan: span{from: 111, to: 120}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 545, to: 557}, definitionScopeID: global{}, kind: "relation", name: "scope.lambda", usageSpan: span{from: 163, to: 175}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1470, to: 1488}, definitionScopeID: global{}, kind: "relation", name: "ast.letBindingExpr", usageSpan: span{from: 430, to: 448}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1470, to: 1488}, definitionScopeID: global{}, kind: "relation", name: "ast.letBindingExpr", usageSpan: span{from: 1159, to: 1177}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1653, to: 1668}, definitionScopeID: global{}, kind: "relation", name: "ast.letBodyExpr", usageSpan: span{from: 389, to: 404}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1653, to: 1668}, definitionScopeID: global{}, kind: "relation", name: "ast.letBodyExpr", usageSpan: span{from: 1242, to: 1257}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1653, to: 1668}, definitionScopeID: global{}, kind: "relation", name: "ast.letBodyExpr", usageSpan: span{from: 2943, to: 2958}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1830, to: 1840}, definitionScopeID: global{}, kind: "relation", name: "ast.letVar", usageSpan: span{from: 477, to: 487}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1939, to: 1954}, definitionScopeID: global{}, kind: "relation", name: "ast.funcCallArg", usageSpan: span{from: 1320, to: 1335}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 1939, to: 1954}, definitionScopeID: global{}, kind: "relation", name: "ast.funcCallArg", usageSpan: span{from: 2638, to: 2653}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2035, to: 2051}, definitionScopeID: global{}, kind: "relation", name: "ast.funcCallFunc", usageSpan: span{from: 1398, to: 1414}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2035, to: 2051}, definitionScopeID: global{}, kind: "relation", name: "ast.funcCallFunc", usageSpan: span{from: 2682, to: 2698}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2136, to: 2143}, definitionScopeID: global{}, kind: "relation", name: "tc.Type", usageSpan: span{from: 520, to: 527}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2136, to: 2143}, definitionScopeID: global{}, kind: "relation", name: "tc.Type", usageSpan: span{from: 2828, to: 2835}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2136, to: 2143}, definitionScopeID: global{}, kind: "relation", name: "tc.Type", usageSpan: span{from: 2986, to: 2993}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2136, to: 2143}, definitionScopeID: global{}, kind: "relation", name: "tc.Type", usageSpan: span{from: 3322, to: 3329}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2385, to: 2393}, definitionScopeID: global{}, kind: "relation", name: "tc.typeS", usageSpan: span{from: 2165, to: 2173}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2470, to: 2478}, definitionScopeID: global{}, kind: "relation", name: "tc.typeI", usageSpan: span{from: 2194, to: 2202}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2549, to: 2558}, definitionScopeID: global{}, kind: "relation", name: "tc.typeFC", usageSpan: span{from: 2257, to: 2266}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 2855, to: 2865}, definitionScopeID: global{}, kind: "relation", name: "tc.typeLet", usageSpan: span{from: 2287, to: 2297}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 3013, to: 3023}, definitionScopeID: global{}, kind: "relation", name: "tc.typeVar", usageSpan: span{from: 2318, to: 2328}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 3152, to: 3165}, definitionScopeID: global{}, kind: "relation", name: "tc.typeLambda", usageSpan: span{from: 2223, to: 2236}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 3347, to: 3365}, definitionScopeID: global{}, kind: "relation", name: "tc.typePlaceholder", usageSpan: span{from: 2349, to: 2367}, usageScopeID: global{}}
scope.Usage{defnSpan: span{from: 20, to: 21}, definitionScopeID: 3, kind: "var", name: "I", usageSpan: span{from: 73, to: 74}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 20, to: 21}, definitionScopeID: 3, kind: "var", name: "I", usageSpan: span{from: 125, to: 126}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 20, to: 21}, definitionScopeID: 3, kind: "var", name: "I", usageSpan: span{from: 180, to: 181}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 29, to: 30}, definitionScopeID: 3, kind: "var", name: "N", usageSpan: span{from: 82, to: 83}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 29, to: 30}, definitionScopeID: 3, kind: "var", name: "N", usageSpan: span{from: 134, to: 135}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 29, to: 30}, definitionScopeID: 3, kind: "var", name: "N", usageSpan: span{from: 189, to: 190}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 38, to: 39}, definitionScopeID: 3, kind: "var", name: "T", usageSpan: span{from: 91, to: 92}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 38, to: 39}, definitionScopeID: 3, kind: "var", name: "T", usageSpan: span{from: 143, to: 144}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 38, to: 39}, definitionScopeID: 3, kind: "var", name: "T", usageSpan: span{from: 198, to: 199}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 47, to: 48}, definitionScopeID: 3, kind: "var", name: "S", usageSpan: span{from: 104, to: 105}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 47, to: 48}, definitionScopeID: 3, kind: "var", name: "S", usageSpan: span{from: 156, to: 157}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 47, to: 48}, definitionScopeID: 3, kind: "var", name: "S", usageSpan: span{from: 211, to: 212}, usageScopeID: 3}
scope.Usage{defnSpan: span{from: 233, to: 234}, definitionScopeID: 315, kind: "var", name: "I", usageSpan: span{from: 297, to: 298}, usageScopeID: 315}
scope.Usage{defnSpan: span{from: 242, to: 243}, definitionScopeID: 315, kind: "var", name: "N", usageSpan: span{from: 323, to: 324}, usageScopeID: 315}
scope.Usage{defnSpan: span{from: 251, to: 252}, definitionScopeID: 315, kind: "var", name: "T", usageSpan: span{from: 332, to: 333}, usageScopeID: 315}
scope.Usage{defnSpan: span{from: 350, to: 351}, definitionScopeID: 490, kind: "var", name: "I", usageSpan: span{from: 423, to: 424}, usageScopeID: 490}
scope.Usage{defnSpan: span{from: 359, to: 360}, definitionScopeID: 490, kind: "var", name: "N", usageSpan: span{from: 504, to: 505}, usageScopeID: 490}
scope.Usage{defnSpan: span{from: 368, to: 369}, definitionScopeID: 490, kind: "var", name: "T", usageSpan: span{from: 541, to: 542}, usageScopeID: 490}
scope.Usage{defnSpan: span{from: 381, to: 382}, definitionScopeID: 490, kind: "var", name: "S", usageSpan: span{from: 513, to: 514}, usageScopeID: 490}
scope.Usage{defnSpan: span{from: 562, to: 563}, definitionScopeID: 798, kind: "var", name: "I", usageSpan: span{from: 618, to: 619}, usageScopeID: 798}
scope.Usage{defnSpan: span{from: 571, to: 572}, definitionScopeID: 798, kind: "var", name: "N", usageSpan: span{from: 671, to: 672}, usageScopeID: 798}
scope.Usage{defnSpan: span{from: 580, to: 581}, definitionScopeID: 798, kind: "var", name: "T", usageSpan: span{from: 678, to: 679}, usageScopeID: 798}
scope.Usage{defnSpan: span{from: 593, to: 594}, definitionScopeID: 798, kind: "var", name: "L", usageSpan: span{from: 691, to: 692}, usageScopeID: 798}
scope.Usage{defnSpan: span{from: 714, to: 715}, definitionScopeID: 1014, kind: "var", name: "I", usageSpan: span{from: 753, to: 754}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 714, to: 715}, definitionScopeID: 1014, kind: "var", name: "I", usageSpan: span{from: 782, to: 783}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 714, to: 715}, definitionScopeID: 1014, kind: "var", name: "I", usageSpan: span{from: 820, to: 821}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 714, to: 715}, definitionScopeID: 1014, kind: "var", name: "I", usageSpan: span{from: 866, to: 867}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 723, to: 724}, definitionScopeID: 1014, kind: "var", name: "N", usageSpan: span{from: 791, to: 792}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 723, to: 724}, definitionScopeID: 1014, kind: "var", name: "N", usageSpan: span{from: 913, to: 914}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 732, to: 733}, definitionScopeID: 1014, kind: "var", name: "S", usageSpan: span{from: 800, to: 801}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 732, to: 733}, definitionScopeID: 1014, kind: "var", name: "S", usageSpan: span{from: 922, to: 923}, usageScopeID: 1014}
scope.Usage{defnSpan: span{from: 942, to: 943}, definitionScopeID: 1323, kind: "var", name: "I", usageSpan: span{from: 973, to: 974}, usageScopeID: 1323}
scope.Usage{defnSpan: span{from: 952, to: 953}, definitionScopeID: 1323, kind: "var", name: "I", usageSpan: span{from: 973, to: 974}, usageScopeID: 1323}
scope.Usage{defnSpan: span{from: 1004, to: 1005}, definitionScopeID: 1399, kind: "var", name: "I", usageSpan: span{from: 1034, to: 1035}, usageScopeID: 1399}
scope.Usage{defnSpan: span{from: 1004, to: 1005}, definitionScopeID: 1399, kind: "var", name: "I", usageSpan: span{from: 1067, to: 1068}, usageScopeID: 1399}
scope.Usage{defnSpan: span{from: 1013, to: 1014}, definitionScopeID: 1399, kind: "var", name: "S", usageSpan: span{from: 1076, to: 1077}, usageScopeID: 1399}
scope.Usage{defnSpan: span{from: 1102, to: 1103}, definitionScopeID: 1559, kind: "var", name: "I", usageSpan: span{from: 1199, to: 1200}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1102, to: 1103}, definitionScopeID: 1559, kind: "var", name: "I", usageSpan: span{from: 1276, to: 1277}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1102, to: 1103}, definitionScopeID: 1559, kind: "var", name: "I", usageSpan: span{from: 1354, to: 1355}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1102, to: 1103}, definitionScopeID: 1559, kind: "var", name: "I", usageSpan: span{from: 1434, to: 1435}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1115, to: 1116}, definitionScopeID: 1559, kind: "var", name: "P", usageSpan: span{from: 1152, to: 1153}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1115, to: 1116}, definitionScopeID: 1559, kind: "var", name: "P", usageSpan: span{from: 1235, to: 1236}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1115, to: 1116}, definitionScopeID: 1559, kind: "var", name: "P", usageSpan: span{from: 1313, to: 1314}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1115, to: 1116}, definitionScopeID: 1559, kind: "var", name: "P", usageSpan: span{from: 1391, to: 1392}, usageScopeID: 1559}
scope.Usage{defnSpan: span{from: 1496, to: 1497}, definitionScopeID: 2135, kind: "var", name: "L", usageSpan: span{from: 1534, to: 1535}, usageScopeID: 2135}
scope.Usage{defnSpan: span{from: 1496, to: 1497}, definitionScopeID: 2135, kind: "var", name: "L", usageSpan: span{from: 1568, to: 1569}, usageScopeID: 2135}
scope.Usage{defnSpan: span{from: 1510, to: 1511}, definitionScopeID: 2135, kind: "var", name: "D", usageSpan: span{from: 1639, to: 1640}, usageScopeID: 2135}
scope.Usage{defnSpan: span{from: 1676, to: 1677}, definitionScopeID: 2407, kind: "var", name: "L", usageSpan: span{from: 1711, to: 1712}, usageScopeID: 2407}
scope.Usage{defnSpan: span{from: 1676, to: 1677}, definitionScopeID: 2407, kind: "var", name: "L", usageSpan: span{from: 1745, to: 1746}, usageScopeID: 2407}
scope.Usage{defnSpan: span{from: 1687, to: 1688}, definitionScopeID: 2407, kind: "var", name: "I", usageSpan: span{from: 1826, to: 1827}, usageScopeID: 2407}
scope.Usage{defnSpan: span{from: 1848, to: 1849}, definitionScopeID: 2667, kind: "var", name: "L", usageSpan: span{from: 1890, to: 1891}, usageScopeID: 2667}
scope.Usage{defnSpan: span{from: 1848, to: 1849}, definitionScopeID: 2667, kind: "var", name: "L", usageSpan: span{from: 1917, to: 1918}, usageScopeID: 2667}
scope.Usage{defnSpan: span{from: 1857, to: 1858}, definitionScopeID: 2667, kind: "var", name: "N", usageSpan: span{from: 1926, to: 1927}, usageScopeID: 2667}
scope.Usage{defnSpan: span{from: 1866, to: 1867}, definitionScopeID: 2667, kind: "var", name: "S", usageSpan: span{from: 1935, to: 1936}, usageScopeID: 2667}
scope.Usage{defnSpan: span{from: 1963, to: 1964}, definitionScopeID: 2827, kind: "var", name: "C", usageSpan: span{from: 1998, to: 1999}, usageScopeID: 2827}
scope.Usage{defnSpan: span{from: 1963, to: 1964}, definitionScopeID: 2827, kind: "var", name: "C", usageSpan: span{from: 2024, to: 2025}, usageScopeID: 2827}
scope.Usage{defnSpan: span{from: 1973, to: 1974}, definitionScopeID: 2827, kind: "var", name: "I", usageSpan: span{from: 2031, to: 2032}, usageScopeID: 2827}
scope.Usage{defnSpan: span{from: 2060, to: 2061}, definitionScopeID: 2973, kind: "var", name: "C", usageSpan: span{from: 2096, to: 2097}, usageScopeID: 2973}
scope.Usage{defnSpan: span{from: 2060, to: 2061}, definitionScopeID: 2973, kind: "var", name: "C", usageSpan: span{from: 2132, to: 2133}, usageScopeID: 2973}
scope.Usage{defnSpan: span{from: 2071, to: 2072}, definitionScopeID: 2973, kind: "var", name: "F", usageSpan: span{from: 2119, to: 2120}, usageScopeID: 2973}
scope.Usage{defnSpan: span{from: 2148, to: 2149}, definitionScopeID: 3129, kind: "var", name: "I", usageSpan: span{from: 2178, to: 2179}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2148, to: 2149}, definitionScopeID: 3129, kind: "var", name: "I", usageSpan: span{from: 2207, to: 2208}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2148, to: 2149}, definitionScopeID: 3129, kind: "var", name: "I", usageSpan: span{from: 2241, to: 2242}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2148, to: 2149}, definitionScopeID: 3129, kind: "var", name: "I", usageSpan: span{from: 2271, to: 2272}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2148, to: 2149}, definitionScopeID: 3129, kind: "var", name: "I", usageSpan: span{from: 2302, to: 2303}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2148, to: 2149}, definitionScopeID: 3129, kind: "var", name: "I", usageSpan: span{from: 2333, to: 2334}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2148, to: 2149}, definitionScopeID: 3129, kind: "var", name: "I", usageSpan: span{from: 2372, to: 2373}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2157, to: 2158}, definitionScopeID: 3129, kind: "var", name: "T", usageSpan: span{from: 2187, to: 2188}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2157, to: 2158}, definitionScopeID: 3129, kind: "var", name: "T", usageSpan: span{from: 2216, to: 2217}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2157, to: 2158}, definitionScopeID: 3129, kind: "var", name: "T", usageSpan: span{from: 2250, to: 2251}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2157, to: 2158}, definitionScopeID: 3129, kind: "var", name: "T", usageSpan: span{from: 2280, to: 2281}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2157, to: 2158}, definitionScopeID: 3129, kind: "var", name: "T", usageSpan: span{from: 2311, to: 2312}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2157, to: 2158}, definitionScopeID: 3129, kind: "var", name: "T", usageSpan: span{from: 2342, to: 2343}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2157, to: 2158}, definitionScopeID: 3129, kind: "var", name: "T", usageSpan: span{from: 2381, to: 2382}, usageScopeID: 3129}
scope.Usage{defnSpan: span{from: 2398, to: 2399}, definitionScopeID: 3481, kind: "var", name: "I", usageSpan: span{from: 2435, to: 2436}, usageScopeID: 3481}
scope.Usage{defnSpan: span{from: 2398, to: 2399}, definitionScopeID: 3481, kind: "var", name: "I", usageSpan: span{from: 2466, to: 2467}, usageScopeID: 3481}
scope.Usage{defnSpan: span{from: 2483, to: 2484}, definitionScopeID: 3603, kind: "var", name: "I", usageSpan: span{from: 2517, to: 2518}, usageScopeID: 3603}
scope.Usage{defnSpan: span{from: 2483, to: 2484}, definitionScopeID: 3603, kind: "var", name: "I", usageSpan: span{from: 2545, to: 2546}, usageScopeID: 3603}
scope.Usage{defnSpan: span{from: 2563, to: 2564}, definitionScopeID: 3716, kind: "var", name: "I", usageSpan: span{from: 2593, to: 2594}, usageScopeID: 3716}
scope.Usage{defnSpan: span{from: 2563, to: 2564}, definitionScopeID: 3716, kind: "var", name: "I", usageSpan: span{from: 2623, to: 2624}, usageScopeID: 3716}
scope.Usage{defnSpan: span{from: 2870, to: 2871}, definitionScopeID: 4142, kind: "var", name: "I", usageSpan: span{from: 2900, to: 2901}, usageScopeID: 4142}
scope.Usage{defnSpan: span{from: 2870, to: 2871}, definitionScopeID: 4142, kind: "var", name: "I", usageSpan: span{from: 2936, to: 2937}, usageScopeID: 4142}
scope.Usage{defnSpan: span{from: 2879, to: 2880}, definitionScopeID: 4142, kind: "var", name: "T", usageSpan: span{from: 3009, to: 3010}, usageScopeID: 4142}
scope.Usage{defnSpan: span{from: 3028, to: 3029}, definitionScopeID: 4364, kind: "var", name: "I", usageSpan: span{from: 3058, to: 3059}, usageScopeID: 4364}
scope.Usage{defnSpan: span{from: 3028, to: 3029}, definitionScopeID: 4364, kind: "var", name: "I", usageSpan: span{from: 3094, to: 3095}, usageScopeID: 4364}
scope.Usage{defnSpan: span{from: 3028, to: 3029}, definitionScopeID: 4364, kind: "var", name: "I", usageSpan: span{from: 3130, to: 3131}, usageScopeID: 4364}
scope.Usage{defnSpan: span{from: 3037, to: 3038}, definitionScopeID: 4364, kind: "var", name: "T", usageSpan: span{from: 3148, to: 3149}, usageScopeID: 4364}
scope.Usage{defnSpan: span{from: 3170, to: 3171}, definitionScopeID: 4564, kind: "var", name: "I", usageSpan: span{from: 3219, to: 3220}, usageScopeID: 4564}
scope.Usage{defnSpan: span{from: 3170, to: 3171}, definitionScopeID: 4564, kind: "var", name: "I", usageSpan: span{from: 3254, to: 3255}, usageScopeID: 4564}
scope.Usage{defnSpan: span{from: 3370, to: 3371}, definitionScopeID: 4848, kind: "var", name: "I", usageSpan: span{from: 3408, to: 3409}, usageScopeID: 4848}
scope.Usage{defnSpan: span{from: 3370, to: 3371}, definitionScopeID: 4848, kind: "var", name: "I", usageSpan: span{from: 3448, to: 3449}, usageScopeID: 4848}
scope.Usage{defnSpan: span{from: 229, to: 231}, definitionScopeID: "scope.builtin", kind: "attr", name: "id", usageSpan: span{from: 69, to: 71}, usageScopeID: "scope.builtin"}
scope.Usage{defnSpan: span{from: 236, to: 240}, definitionScopeID: "scope.builtin", kind: "attr", name: "name", usageSpan: span{from: 76, to: 80}, usageScopeID: "scope.builtin"}
scope.Usage{defnSpan: span{from: 245, to: 249}, definitionScopeID: "scope.builtin", kind: "attr", name: "type", usageSpan: span{from: 85, to: 89}, usageScopeID: "scope.builtin"}
scope.Usage{defnSpan: span{from: 254, to: 262}, definitionScopeID: "scope.builtin", kind: "attr", name: "location", usageSpan: span{from: 94, to: 102}, usageScopeID: "scope.builtin"}
scope.Usage{defnSpan: span{from: 346, to: 348}, definitionScopeID: "scope.let", kind: "attr", name: "id", usageSpan: span{from: 121, to: 123}, usageScopeID: "scope.let"}
scope.Usage{defnSpan: span{from: 353, to: 357}, definitionScopeID: "scope.let", kind: "attr", name: "name", usageSpan: span{from: 128, to: 132}, usageScopeID: "scope.let"}
scope.Usage{defnSpan: span{from: 362, to: 366}, definitionScopeID: "scope.let", kind: "attr", name: "type", usageSpan: span{from: 137, to: 141}, usageScopeID: "scope.let"}
scope.Usage{defnSpan: span{from: 371, to: 379}, definitionScopeID: "scope.let", kind: "attr", name: "location", usageSpan: span{from: 146, to: 154}, usageScopeID: "scope.let"}
scope.Usage{defnSpan: span{from: 558, to: 560}, definitionScopeID: "scope.lambda", kind: "attr", name: "id", usageSpan: span{from: 176, to: 178}, usageScopeID: "scope.lambda"}
scope.Usage{defnSpan: span{from: 565, to: 569}, definitionScopeID: "scope.lambda", kind: "attr", name: "name", usageSpan: span{from: 183, to: 187}, usageScopeID: "scope.lambda"}
scope.Usage{defnSpan: span{from: 574, to: 578}, definitionScopeID: "scope.lambda", kind: "attr", name: "type", usageSpan: span{from: 192, to: 196}, usageScopeID: "scope.lambda"}
scope.Usage{defnSpan: span{from: 583, to: 591}, definitionScopeID: "scope.lambda", kind: "attr", name: "location", usageSpan: span{from: 201, to: 209}, usageScopeID: "scope.lambda"}
scope.Usage{defnSpan: span{from: 1489, to: 1494}, definitionScopeID: "ast.letBindingExpr", kind: "attr", name: "letID", usageSpan: span{from: 449, to: 454}, usageScopeID: "ast.letBindingExpr"}
scope.Usage{defnSpan: span{from: 1489, to: 1494}, definitionScopeID: "ast.letBindingExpr", kind: "attr", name: "letID", usageSpan: span{from: 1178, to: 1183}, usageScopeID: "ast.letBindingExpr"}
scope.Usage{defnSpan: span{from: 1499, to: 1508}, definitionScopeID: "ast.letBindingExpr", kind: "attr", name: "bindingID", usageSpan: span{from: 459, to: 468}, usageScopeID: "ast.letBindingExpr"}
scope.Usage{defnSpan: span{from: 1499, to: 1508}, definitionScopeID: "ast.letBindingExpr", kind: "attr", name: "bindingID", usageSpan: span{from: 1188, to: 1197}, usageScopeID: "ast.letBindingExpr"}
scope.Usage{defnSpan: span{from: 1669, to: 1674}, definitionScopeID: "ast.letBodyExpr", kind: "attr", name: "letID", usageSpan: span{from: 405, to: 410}, usageScopeID: "ast.letBodyExpr"}
scope.Usage{defnSpan: span{from: 1669, to: 1674}, definitionScopeID: "ast.letBodyExpr", kind: "attr", name: "letID", usageSpan: span{from: 1258, to: 1263}, usageScopeID: "ast.letBodyExpr"}
scope.Usage{defnSpan: span{from: 1669, to: 1674}, definitionScopeID: "ast.letBodyExpr", kind: "attr", name: "letID", usageSpan: span{from: 2959, to: 2964}, usageScopeID: "ast.letBodyExpr"}
scope.Usage{defnSpan: span{from: 1679, to: 1685}, definitionScopeID: "ast.letBodyExpr", kind: "attr", name: "bodyID", usageSpan: span{from: 415, to: 421}, usageScopeID: "ast.letBodyExpr"}
scope.Usage{defnSpan: span{from: 1679, to: 1685}, definitionScopeID: "ast.letBodyExpr", kind: "attr", name: "bodyID", usageSpan: span{from: 1268, to: 1274}, usageScopeID: "ast.letBodyExpr"}
scope.Usage{defnSpan: span{from: 1679, to: 1685}, definitionScopeID: "ast.letBodyExpr", kind: "attr", name: "bodyID", usageSpan: span{from: 2969, to: 2975}, usageScopeID: "ast.letBodyExpr"}
scope.Usage{defnSpan: span{from: 1841, to: 1846}, definitionScopeID: "ast.letVar", kind: "attr", name: "letID", usageSpan: span{from: 488, to: 493}, usageScopeID: "ast.letVar"}
scope.Usage{defnSpan: span{from: 1851, to: 1855}, definitionScopeID: "ast.letVar", kind: "attr", name: "name", usageSpan: span{from: 498, to: 502}, usageScopeID: "ast.letVar"}
scope.Usage{defnSpan: span{from: 1860, to: 1864}, definitionScopeID: "ast.letVar", kind: "attr", name: "span", usageSpan: span{from: 507, to: 511}, usageScopeID: "ast.letVar"}
scope.Usage{defnSpan: span{from: 1955, to: 1961}, definitionScopeID: "ast.funcCallArg", kind: "attr", name: "callID", usageSpan: span{from: 1336, to: 1342}, usageScopeID: "ast.funcCallArg"}
scope.Usage{defnSpan: span{from: 1955, to: 1961}, definitionScopeID: "ast.funcCallArg", kind: "attr", name: "callID", usageSpan: span{from: 2654, to: 2660}, usageScopeID: "ast.funcCallArg"}
scope.Usage{defnSpan: span{from: 1966, to: 1971}, definitionScopeID: "ast.funcCallArg", kind: "attr", name: "argID", usageSpan: span{from: 1347, to: 1352}, usageScopeID: "ast.funcCallArg"}
scope.Usage{defnSpan: span{from: 1966, to: 1971}, definitionScopeID: "ast.funcCallArg", kind: "attr", name: "argID", usageSpan: span{from: 2666, to: 2671}, usageScopeID: "ast.funcCallArg"}
scope.Usage{defnSpan: span{from: 2052, to: 2058}, definitionScopeID: "ast.funcCallFunc", kind: "attr", name: "callID", usageSpan: span{from: 1415, to: 1421}, usageScopeID: "ast.funcCallFunc"}
scope.Usage{defnSpan: span{from: 2052, to: 2058}, definitionScopeID: "ast.funcCallFunc", kind: "attr", name: "callID", usageSpan: span{from: 2699, to: 2705}, usageScopeID: "ast.funcCallFunc"}
scope.Usage{defnSpan: span{from: 2063, to: 2069}, definitionScopeID: "ast.funcCallFunc", kind: "attr", name: "funcID", usageSpan: span{from: 1426, to: 1432}, usageScopeID: "ast.funcCallFunc"}
scope.Usage{defnSpan: span{from: 2063, to: 2069}, definitionScopeID: "ast.funcCallFunc", kind: "attr", name: "funcID", usageSpan: span{from: 2711, to: 2717}, usageScopeID: "ast.funcCallFunc"}
scope.Usage{defnSpan: span{from: 2144, to: 2146}, definitionScopeID: "tc.Type", kind: "attr", name: "id", usageSpan: span{from: 528, to: 530}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2144, to: 2146}, definitionScopeID: "tc.Type", kind: "attr", name: "id", usageSpan: span{from: 2836, to: 2838}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2144, to: 2146}, definitionScopeID: "tc.Type", kind: "attr", name: "id", usageSpan: span{from: 2994, to: 2996}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2144, to: 2146}, definitionScopeID: "tc.Type", kind: "attr", name: "id", usageSpan: span{from: 3330, to: 3332}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2151, to: 2155}, definitionScopeID: "tc.Type", kind: "attr", name: "type", usageSpan: span{from: 535, to: 539}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2151, to: 2155}, definitionScopeID: "tc.Type", kind: "attr", name: "type", usageSpan: span{from: 2845, to: 2849}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2151, to: 2155}, definitionScopeID: "tc.Type", kind: "attr", name: "type", usageSpan: span{from: 3003, to: 3007}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2151, to: 2155}, definitionScopeID: "tc.Type", kind: "attr", name: "type", usageSpan: span{from: 3337, to: 3341}, usageScopeID: "tc.Type"}
scope.Usage{defnSpan: span{from: 2394, to: 2396}, definitionScopeID: "tc.typeS", kind: "attr", name: "id", usageSpan: span{from: 2174, to: 2176}, usageScopeID: "tc.typeS"}
scope.Usage{defnSpan: span{from: 2401, to: 2405}, definitionScopeID: "tc.typeS", kind: "attr", name: "type", usageSpan: span{from: 2181, to: 2185}, usageScopeID: "tc.typeS"}
scope.Usage{defnSpan: span{from: 2479, to: 2481}, definitionScopeID: "tc.typeI", kind: "attr", name: "id", usageSpan: span{from: 2203, to: 2205}, usageScopeID: "tc.typeI"}
scope.Usage{defnSpan: span{from: 2486, to: 2490}, definitionScopeID: "tc.typeI", kind: "attr", name: "type", usageSpan: span{from: 2210, to: 2214}, usageScopeID: "tc.typeI"}
scope.Usage{defnSpan: span{from: 2559, to: 2561}, definitionScopeID: "tc.typeFC", kind: "attr", name: "id", usageSpan: span{from: 2267, to: 2269}, usageScopeID: "tc.typeFC"}
scope.Usage{defnSpan: span{from: 2566, to: 2570}, definitionScopeID: "tc.typeFC", kind: "attr", name: "type", usageSpan: span{from: 2274, to: 2278}, usageScopeID: "tc.typeFC"}
scope.Usage{defnSpan: span{from: 2866, to: 2868}, definitionScopeID: "tc.typeLet", kind: "attr", name: "id", usageSpan: span{from: 2298, to: 2300}, usageScopeID: "tc.typeLet"}
scope.Usage{defnSpan: span{from: 2873, to: 2877}, definitionScopeID: "tc.typeLet", kind: "attr", name: "type", usageSpan: span{from: 2305, to: 2309}, usageScopeID: "tc.typeLet"}
scope.Usage{defnSpan: span{from: 3024, to: 3026}, definitionScopeID: "tc.typeVar", kind: "attr", name: "id", usageSpan: span{from: 2329, to: 2331}, usageScopeID: "tc.typeVar"}
scope.Usage{defnSpan: span{from: 3031, to: 3035}, definitionScopeID: "tc.typeVar", kind: "attr", name: "type", usageSpan: span{from: 2336, to: 2340}, usageScopeID: "tc.typeVar"}
scope.Usage{defnSpan: span{from: 3166, to: 3168}, definitionScopeID: "tc.typeLambda", kind: "attr", name: "id", usageSpan: span{from: 2237, to: 2239}, usageScopeID: "tc.typeLambda"}
scope.Usage{defnSpan: span{from: 3173, to: 3177}, definitionScopeID: "tc.typeLambda", kind: "attr", name: "type", usageSpan: span{from: 2244, to: 2248}, usageScopeID: "tc.typeLambda"}
scope.Usage{defnSpan: span{from: 3366, to: 3368}, definitionScopeID: "tc.typePlaceholder", kind: "attr", name: "id", usageSpan: span{from: 2368, to: 2370}, usageScopeID: "tc.typePlaceholder"}
scope.Usage{defnSpan: span{from: 3373, to: 3377}, definitionScopeID: "tc.typePlaceholder", kind: "attr", name: "type", usageSpan: span{from: 2375, to: 2379}, usageScopeID: "tc.typePlaceholder"}
