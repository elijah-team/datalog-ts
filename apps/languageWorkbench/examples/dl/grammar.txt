main :- repSep(stmt, [".", "\n"]).
stmt :- rule.

rule :- [record, ws, ":-", "ws", repSep(disjunct, [ws, "|", ws])].
disjunct :- repSep(record, [ws, "&", ws]).

term :- (record | int | var).
var :- [[A-Z], repSep([a-z], "")].
record :- [ident, "{", repSep(keyValue, ","), "}"].
keyValue :- [ident, ":", ws, term].
int :- [num, repSep(num, "")].

alpha :- ([a-z] | [A-Z] | "_").
num :- [0-9].
alphaNum :- (alpha | num).
ident :- [alpha, repSep((alphaNum | "."), "")].
ws :- repSep((" "|"\n"), "").
