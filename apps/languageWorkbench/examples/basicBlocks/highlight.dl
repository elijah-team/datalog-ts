hl.Segment{type: T, span: S, highlight: H} :-
  hl.ident{type: T, span: S, highlight: H} |
  hl.keyword{type: T, span: S, highlight: H}.

hl.ident{type: "ident", span: S, highlight: false} :-
  ast.ident{span: S}.

hl.keyword{type: "keyword", span: S, highlight: false} :-
  ast.gotoKW{span: S}.

defn.block{id: BlockID, name: N} :-
  ast.block{id: BlockID} &
  ast.label{id: LabelID, parentID: BlockID} &
  ast.ident{parentID: LabelID, text: N}.

# TODO: factor this out a bit
ide.jump{from: BF, to: BT} :-
  ast.ident{id: I, text: BT, parentID: GotoInstrID} &
  ast.gotoInstr{id: GotoInstrID, parentID: InstrID} &
  ast.instr{id: InstrID, parentID: BlockID} &
  defn.block{id: BlockID, name: BF}.

internal.visualization{
  name: "Jumps",
  spec: graphviz{
    nodes: "defn.block{name: ID}",
    edges: "ide.jump{from: From, to: To}"
  }
}.
