current{id: 1, level: 5}.
current{id: 2, level: 10}.
current{id: 2, level: 13}.
total{level: C} :-
  sum[C: current{id: I, level: C}].
total{level: C}?
----
application/datalog
total{level: 28}.
total{level: 5}.

currentInput{dest: 1, level: 5}.
currentInput{dest: 1, level: 10}.
currentInput{dest: 2, level: 13}.
currentInput{dest: 2, level: 14}.
groupedTotal{dest: D, level: C} :-
  sum[D, C: currentInput{dest: D, level: C}].
groupedTotal{level: C}?
----
application/datalog
groupedTotal{dest: 1, level: 15}.
groupedTotal{dest: 2, level: 27}.

foo{id: 1}.
foo{id: 2}.
foo{id: 3}.
countFoo{count: I} :-
  count[I: foo{id: I}].
countFoo{count: I}?
----
application/datalog
countFoo{count: 3}.

bar{id: 1, parentID: 1}.
bar{id: 2, parentID: 1}.
bar{id: 3, parentID: 1}.
bar{id: 4, parentID: 2}.
bar{id: 5, parentID: 2}.
countBarByParent{parentID: P, count: I} :-
  count[P, I: bar{id: I, parentID: P}].
countBarByParent{parentID: P, count: I}?
----
application/datalog
countBarByParent{count: 2, parentID: 2}.
countBarByParent{count: 3, parentID: 1}.

parseResult{id: "x", length: 1, res: "a"}.
parseResult{id: "y", length: 7, res: "abcdefg"}.
parseResult{id: "y", length: 5, res: "abcde"}.
parseResult{id: "x", length: 3, res: "abc"}.
parseResult{id: "x", length: 2, res: "ab"}.
parseResult{id: "y", length: 6, res: "abcdef"}.
longestParseResult{id: I, res: R} :-
  maxBy[I, L: parseResult{id: I, length: L, res: R}].
longestParseResult{}?
----
application/datalog
longestParseResult{id: "x", res: "abc"}.
longestParseResult{id: "y", res: "abcdefg"}.
