gram
main :- "foo".
----
application/datalog
main{span: span{from: P1, to: P4}} :- 
  input.char{char: "f", id: P1} &
  input.char{char: "o", id: P2} &
  input.char{char: "o", id: P3} &
  input.next{left: P1, right: P2} &
  input.next{left: P2, right: P3} &
  input.next{left: P3, right: P4}.

input
foo
----
application/datalog
main{span: span{from: 0, to: -2}}.

gram
main :- repSep("foo", "bar").
----
application/datalog
main{span: span{from: P1, to: P4}} :- 
  main_rep{span: span{from: P1, to: P4}} |
  main_rep{span: span{from: P1, to: P2}} &
  main_sep{span: span{from: P2, to: P3}} &
  main{span: span{from: P3, to: P4}}.
main_rep{span: span{from: P1, to: P4}} :- 
  input.char{char: "f", id: P1} &
  input.char{char: "o", id: P2} &
  input.char{char: "o", id: P3} &
  input.next{left: P1, right: P2} &
  input.next{left: P2, right: P3} &
  input.next{left: P3, right: P4}.
main_sep{span: span{from: P1, to: P4}} :- 
  input.char{char: "b", id: P1} &
  input.char{char: "a", id: P2} &
  input.char{char: "r", id: P3} &
  input.next{left: P1, right: P2} &
  input.next{left: P2, right: P3} &
  input.next{left: P3, right: P4}.

input
foo
----
application/datalog
main{span: span{from: 0, to: -2}}.

input
foobar
----
application/datalog
main{span: span{from: 0, to: 3}}.

input
foobarfoo
----
application/datalog
main{span: span{from: 0, to: 3}}.
main{span: span{from: 6, to: -2}}.
main{span: span{from: 0, to: -2}}.

gram
main :- ["a", "b", "c"].
----
application/datalog
main{span: span{from: P1, to: P6}} :- 
  main_seq_0{span: span{from: P1, to: P2}} &
  main_seq_1{span: span{from: P2, to: P3}} &
  main_seq_2{span: span{from: P3, to: P4}}.
main_seq_0{span: span{from: P1, to: P2}} :- 
  input.char{char: "a", id: P1} &
  input.next{left: P1, right: P2}.
main_seq_1{span: span{from: P1, to: P2}} :- 
  input.char{char: "b", id: P1} &
  input.next{left: P1, right: P2}.
main_seq_2{span: span{from: P1, to: P2}} :- 
  input.char{char: "c", id: P1} &
  input.next{left: P1, right: P2}.

input
abc
----
application/datalog
main{span: span{from: 0, to: P6}}.

gram
main :- ["[", repSep([a-z], ","), "]"].
----
application/datalog
main{span: span{from: P1, to: P6}} :- 
  main_seq_0{span: span{from: P1, to: P2}} &
  main_seq_1{span: span{from: P2, to: P3}} &
  main_seq_2{span: span{from: P3, to: P4}}.
main_seq_0{span: span{from: P1, to: P2}} :- 
  input.char{char: "[", id: P1} &
  input.next{left: P1, right: P2}.
main_seq_1{span: span{from: P1, to: P4}} :- 
  main_seq_1_rep{span: span{from: P1, to: P4}} |
  main_seq_1_rep{span: span{from: P1, to: P2}} &
  main_seq_1_sep{span: span{from: P2, to: P3}} &
  main_seq_1{span: span{from: P3, to: P4}}.
main_seq_1_rep{span: span{from: P1, to: P1}} :- input.char{char: C, id: P1} & "a" <= C & C <= "z".
main_seq_1_sep{span: span{from: P1, to: P2}} :- 
  input.char{char: ",", id: P1} &
  input.next{left: P1, right: P2}.
main_seq_2{span: span{from: P1, to: P2}} :- 
  input.char{char: "]", id: P1} &
  input.next{left: P1, right: P2}.

gram
main :- (foo | bar).
foo :- "foo".
bar :- "bar".
----
application/datalog
bar{span: span{from: P1, to: P4}} :- 
  input.char{char: "b", id: P1} &
  input.char{char: "a", id: P2} &
  input.char{char: "r", id: P3} &
  input.next{left: P1, right: P2} &
  input.next{left: P2, right: P3} &
  input.next{left: P3, right: P4}.
foo{span: span{from: P1, to: P4}} :- 
  input.char{char: "f", id: P1} &
  input.char{char: "o", id: P2} &
  input.char{char: "o", id: P3} &
  input.next{left: P1, right: P2} &
  input.next{left: P2, right: P3} &
  input.next{left: P3, right: P4}.
main{span: span{from: P1, to: P2}} :- 
  main_choice_0{span: span{from: P1, to: P2}} |
  main_choice_1{span: span{from: P1, to: P2}}.
main_choice_0{span: span{from: P1, to: P2}} :- foo{span: span{from: P1, to: P2}}.
main_choice_1{span: span{from: P1, to: P2}} :- bar{span: span{from: P1, to: P2}}.

gram
main :- repSep([0-9], "").
----
application/datalog
main{span: span{from: P1, to: P4}} :- 
  main_rep{span: span{from: P1, to: P4}} |
  main_rep{span: span{from: P1, to: P2}} &
  main_sep{span: span{from: P2, to: P3}} &
  main{span: span{from: P3, to: P4}}.
main_rep{span: span{from: P1, to: P1}} :- input.char{char: C, id: P1} & "0" <= C & C <= "9".
main_sep{span: span{from: P1, to: P2}} :- input.char{id: P1} & P1 == P2.

gram
main :- value.
value :- (object | array | int | string | null).
int :- [[0-9], repSep([0-9], "")].
object :- ["{", repSep(keyValue, ","), "}"].
keyValue :- [string, ":", value].
string :- ["'", repSep([a-z], ""), "'"].
array :- ["[", repSep(value, ","), "]"].
null :- "null".
----
application/datalog
array{span: span{from: P1, to: P6}} :- 
  array_seq_0{span: span{from: P1, to: P2}} &
  array_seq_1{span: span{from: P2, to: P3}} &
  array_seq_2{span: span{from: P3, to: P4}}.
array_seq_0{span: span{from: P1, to: P2}} :- 
  input.char{char: "[", id: P1} &
  input.next{left: P1, right: P2}.
array_seq_1{span: span{from: P1, to: P4}} :- 
  array_seq_1_rep{span: span{from: P1, to: P4}} |
  array_seq_1_rep{span: span{from: P1, to: P2}} &
  array_seq_1_sep{span: span{from: P2, to: P3}} &
  array_seq_1{span: span{from: P3, to: P4}}.
array_seq_1_rep{span: span{from: P1, to: P2}} :- value{span: span{from: P1, to: P2}}.
array_seq_1_sep{span: span{from: P1, to: P2}} :- 
  input.char{char: ",", id: P1} &
  input.next{left: P1, right: P2}.
array_seq_2{span: span{from: P1, to: P2}} :- 
  input.char{char: "]", id: P1} &
  input.next{left: P1, right: P2}.
int{span: span{from: P1, to: P4}} :- 
  int_seq_0{span: span{from: P1, to: P2}} &
  int_seq_1{span: span{from: P2, to: P3}}.
int_seq_0{span: span{from: P1, to: P1}} :- input.char{char: C, id: P1} & "0" <= C & C <= "9".
int_seq_1{span: span{from: P1, to: P4}} :- 
  int_seq_1_rep{span: span{from: P1, to: P4}} |
  int_seq_1_rep{span: span{from: P1, to: P2}} &
  int_seq_1_sep{span: span{from: P2, to: P3}} &
  int_seq_1{span: span{from: P3, to: P4}}.
int_seq_1_rep{span: span{from: P1, to: P1}} :- input.char{char: C, id: P1} & "0" <= C & C <= "9".
int_seq_1_sep{span: span{from: P1, to: P2}} :- input.char{id: P1} & P1 == P2.
keyValue{span: span{from: P1, to: P6}} :- 
  keyValue_seq_0{span: span{from: P1, to: P2}} &
  keyValue_seq_1{span: span{from: P2, to: P3}} &
  keyValue_seq_2{span: span{from: P3, to: P4}}.
keyValue_seq_0{span: span{from: P1, to: P2}} :- string{span: span{from: P1, to: P2}}.
keyValue_seq_1{span: span{from: P1, to: P2}} :- 
  input.char{char: ":", id: P1} &
  input.next{left: P1, right: P2}.
keyValue_seq_2{span: span{from: P1, to: P2}} :- value{span: span{from: P1, to: P2}}.
main{span: span{from: P1, to: P2}} :- value{span: span{from: P1, to: P2}}.
null{span: span{from: P1, to: P5}} :- 
  input.char{char: "n", id: P1} &
  input.char{char: "u", id: P2} &
  input.char{char: "l", id: P3} &
  input.char{char: "l", id: P4} &
  input.next{left: P1, right: P2} &
  input.next{left: P2, right: P3} &
  input.next{left: P3, right: P4} &
  input.next{left: P4, right: P5}.
object{span: span{from: P1, to: P6}} :- 
  object_seq_0{span: span{from: P1, to: P2}} &
  object_seq_1{span: span{from: P2, to: P3}} &
  object_seq_2{span: span{from: P3, to: P4}}.
object_seq_0{span: span{from: P1, to: P2}} :- 
  input.char{char: "{", id: P1} &
  input.next{left: P1, right: P2}.
object_seq_1{span: span{from: P1, to: P4}} :- 
  object_seq_1_rep{span: span{from: P1, to: P4}} |
  object_seq_1_rep{span: span{from: P1, to: P2}} &
  object_seq_1_sep{span: span{from: P2, to: P3}} &
  object_seq_1{span: span{from: P3, to: P4}}.
object_seq_1_rep{span: span{from: P1, to: P2}} :- keyValue{span: span{from: P1, to: P2}}.
object_seq_1_sep{span: span{from: P1, to: P2}} :- 
  input.char{char: ",", id: P1} &
  input.next{left: P1, right: P2}.
object_seq_2{span: span{from: P1, to: P2}} :- 
  input.char{char: "}", id: P1} &
  input.next{left: P1, right: P2}.
string{span: span{from: P1, to: P6}} :- 
  string_seq_0{span: span{from: P1, to: P2}} &
  string_seq_1{span: span{from: P2, to: P3}} &
  string_seq_2{span: span{from: P3, to: P4}}.
string_seq_0{span: span{from: P1, to: P2}} :- 
  input.char{char: "'", id: P1} &
  input.next{left: P1, right: P2}.
string_seq_1{span: span{from: P1, to: P4}} :- 
  string_seq_1_rep{span: span{from: P1, to: P4}} |
  string_seq_1_rep{span: span{from: P1, to: P2}} &
  string_seq_1_sep{span: span{from: P2, to: P3}} &
  string_seq_1{span: span{from: P3, to: P4}}.
string_seq_1_rep{span: span{from: P1, to: P1}} :- input.char{char: C, id: P1} & "a" <= C & C <= "z".
string_seq_1_sep{span: span{from: P1, to: P2}} :- input.char{id: P1} & P1 == P2.
string_seq_2{span: span{from: P1, to: P2}} :- 
  input.char{char: "'", id: P1} &
  input.next{left: P1, right: P2}.
value{span: span{from: P1, to: P2}} :- 
  value_choice_0{span: span{from: P1, to: P2}} |
  value_choice_1{span: span{from: P1, to: P2}} |
  value_choice_2{span: span{from: P1, to: P2}} |
  value_choice_3{span: span{from: P1, to: P2}} |
  value_choice_4{span: span{from: P1, to: P2}}.
value_choice_0{span: span{from: P1, to: P2}} :- object{span: span{from: P1, to: P2}}.
value_choice_1{span: span{from: P1, to: P2}} :- array{span: span{from: P1, to: P2}}.
value_choice_2{span: span{from: P1, to: P2}} :- int{span: span{from: P1, to: P2}}.
value_choice_3{span: span{from: P1, to: P2}} :- string{span: span{from: P1, to: P2}}.
value_choice_4{span: span{from: P1, to: P2}} :- null{span: span{from: P1, to: P2}}.
