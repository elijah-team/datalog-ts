main :- value.
value :- (object | array | intLit | stringLit).
object :- ["{", repSep(keyValue, ","), "}"].
keyValue :- [stringLit, ": ", value].
intLit :- repSep(digit, "").
array :- ["[", repSep(value, ","), "]"].
digit :- [0-9].
stringLit :- ["\"", repSep([a-z], ""), "\""].
----
text/plain
grammar [0-277]
  ruleDefn [0-14]
    ruleName: "main" [0-4]
    rule [8-13]
      ref: "value" [8-13]
  ruleDefn [15-62]
    ruleName: "value" [15-20]
    rule [24-61]
      choice [24-61]
        rule [25-31]
          ref: "object" [25-31]
        rule [34-39]
          ref: "array" [34-39]
        rule [42-48]
          ref: "intLit" [42-48]
        rule [51-60]
          ref: "stringLit" [51-60]
  ruleDefn [63-107]
    ruleName: "object" [63-69]
    rule [73-106]
      seq [73-106]
        rule [74-77]
          text: "\"{\"" [74-77]
        rule [79-100]
          repSep [79-100]
            rule [86-94]
              ref: "keyValue" [86-94]
            rule [96-99]
              text: "\",\"" [96-99]
        rule [102-105]
          text: "\"}\"" [102-105]
  ruleDefn [108-145]
    ruleName: "keyValue" [108-116]
    rule [120-144]
      seq [120-144]
        rule [121-130]
          ref: "stringLit" [121-130]
        rule [132-136]
          text: "\": \"" [132-136]
        rule [138-143]
          ref: "value" [138-143]
  ruleDefn [146-174]
    ruleName: "intLit" [146-152]
    rule [156-173]
      repSep [156-173]
        rule [163-168]
          ref: "digit" [163-168]
        rule [170-172]
          text: "\"\"" [170-172]
  ruleDefn [175-215]
    ruleName: "array" [175-180]
    rule [184-214]
      seq [184-214]
        rule [185-188]
          text: "\"[\"" [185-188]
        rule [190-208]
          repSep [190-208]
            rule [197-202]
              ref: "value" [197-202]
            rule [204-207]
              text: "\",\"" [204-207]
        rule [210-213]
          text: "\"]\"" [210-213]
  ruleDefn [216-231]
    ruleName: "digit" [216-221]
    rule [225-230]
      charRule [225-230]
        crRange [225-230]
          singleChar: "0" [226-227]
          singleChar: "9" [228-229]
  ruleDefn [232-277]
    ruleName: "stringLit" [232-241]
    rule [245-276]
      seq [245-276]
        rule [246-250]
          text: "\"\\\"\"" [246-250]
        rule [252-269]
          repSep [252-269]
            rule [259-264]
              charRule [259-264]
                crRange [259-264]
                  singleChar: "a" [260-261]
                  singleChar: "z" [262-263]
            rule [266-268]
              text: "\"\"" [266-268]
        rule [271-275]
          text: "\"\\\"\"" [271-275]
{
  "main": {
    "type": "Ref",
    "name": "value"
  },
  "value": {
    "type": "Choice",
    "choices": [
      {
        "type": "Ref",
        "name": "object"
      },
      {
        "type": "Ref",
        "name": "array"
      },
      {
        "type": "Ref",
        "name": "intLit"
      },
      {
        "type": "Ref",
        "name": "stringLit"
      }
    ]
  },
  "object": {
    "type": "Sequence",
    "items": [
      {
        "type": "Text",
        "value": "{"
      },
      {
        "type": "RepSep",
        "rep": {
          "type": "Ref",
          "name": "keyValue"
        },
        "sep": {
          "type": "Text",
          "value": ","
        }
      },
      {
        "type": "Text",
        "value": "}"
      }
    ]
  },
  "keyValue": {
    "type": "Sequence",
    "items": [
      {
        "type": "Ref",
        "name": "stringLit"
      },
      {
        "type": "Text",
        "value": ": "
      },
      {
        "type": "Ref",
        "name": "value"
      }
    ]
  },
  "intLit": {
    "type": "RepSep",
    "rep": {
      "type": "Ref",
      "name": "digit"
    },
    "sep": {
      "type": "Text",
      "value": ""
    }
  },
  "array": {
    "type": "Sequence",
    "items": [
      {
        "type": "Text",
        "value": "["
      },
      {
        "type": "RepSep",
        "rep": {
          "type": "Ref",
          "name": "value"
        },
        "sep": {
          "type": "Text",
          "value": ","
        }
      },
      {
        "type": "Text",
        "value": "]"
      }
    ]
  },
  "digit": {
    "type": "Char",
    "rule": {
      "type": "Range",
      "from": "0",
      "to": "9"
    }
  },
  "stringLit": {
    "type": "Sequence",
    "items": [
      {
        "type": "Text",
        "value": "\""
      },
      {
        "type": "RepSep",
        "rep": {
          "type": "Char",
          "rule": {
            "type": "Range",
            "from": "a",
            "to": "z"
          }
        },
        "sep": {
          "type": "Text",
          "value": ""
        }
      },
      {
        "type": "Text",
        "value": "\""
      }
    ]
  }
}

notQuote :- ^'"'.
----
text/plain
grammar [0-17]
  ruleDefn [0-17]
    ruleName: "notQuote" [0-8]
    rule [12-16]
      charRule [12-16]
        crNot [12-16]
          charRule [13-16]
            crLiteral [13-16]
              singleChar: "\"" [14-15]
{
  "notQuote": {
    "type": "Char",
    "rule": {
      "type": "Not",
      "rule": {
        "type": "Literal",
        "value": "\""
      }
    }
  }
}
